name: Reusable Terraform Plan

on:
  workflow_call:
    inputs:
      environment_name:
        description: "Environment name for gating (e.g. dev-plan or prod-plan)"
        required: true
        type: string
      plan_filename:
        description: "Name of the .tfplan file"
        required: true
        type: string
      artifact_name:
        description: "Name of the plan artifact (e.g. terraform-prod-plan)"
        required: true
        type: string
      tfstate_key:
        description: "Backend state file key (e.g. branch-based-reusable-workflows.tfstate)"
        required: true
        type: string
      checkout_ref:
        description: "Git ref/sha to check out"
        required: true
        type: string
      is_pr:
        description: "Whether the original event is a PR"
        required: false
        type: boolean
        default: false

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    # The environment for this job is set from the input.
    environment: ${{ inputs.environment_name }}
    outputs:
      tfplan_exitcode: ${{ steps.tf-plan.outputs.exitcode }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.checkout_ref }}
          fetch-depth: 0

      - name: Debug Secrets & vars (for testing only)
        run: |
            echo "Environment Name: ${{ inputs.environment_name }}"
            echo "Azure Client ID: ${{ secrets.AZURE_CLIENT_ID }}"
            echo "Azure Tenant ID: ${{ secrets.AZURE_TENANT_ID }}"
            echo "Azure Subscription ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            eehco "TFSTATE_CONTAINER_NAME: ${{ vars.TFSTATE_CONTAINER_NAME }}"

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform init \
            -backend-config="container_name=${{ vars.TFSTATE_CONTAINER_NAME }}" \
            -backend-config="key=${{ inputs.tfstate_key }}"

      - name: Terraform Plan
        id: tf-plan
        working-directory: terraform
        shell: bash
        run: |
          exitcode=0
          terraform plan -detailed-exitcode -no-color -out=${{ inputs.plan_filename }} || exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo "Terraform Plan Failed!"
            exit 1
          fi

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: terraform/${{ inputs.plan_filename }}
